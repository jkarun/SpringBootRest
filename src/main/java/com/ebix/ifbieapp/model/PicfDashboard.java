package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PicfDashboard generated by hbm2java
 */
@Entity
@Table(name="picf_dashboard"
    ,schema="dbo"
    ,catalog="life_eapp"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class PicfDashboard  implements java.io.Serializable {


     private BigDecimal id;
     private String name;
     private String description;
     private String soureType;
     private String query;
     private String countQuery;
     private String entity;
     private Integer recordsPerPage;
     private String selectionModel;
     private Character filtering;
     private String status;
     private String emptyText;
     private BigDecimal lastUpdatedUser;
     private Date lastUpdatedDate;
     private Byte isDeleted;
     private Set<PicfColumnMetadata> picfColumnMetadatas = new HashSet<PicfColumnMetadata>(0);

    public PicfDashboard() {
    }

	
    public PicfDashboard(String name, String status) {
        this.name = name;
        this.status = status;
    }
    public PicfDashboard(String name, String description, String soureType, String query, String countQuery, String entity, Integer recordsPerPage, String selectionModel, Character filtering, String status, String emptyText, BigDecimal lastUpdatedUser, Date lastUpdatedDate, Byte isDeleted, Set<PicfColumnMetadata> picfColumnMetadatas) {
       this.name = name;
       this.description = description;
       this.soureType = soureType;
       this.query = query;
       this.countQuery = countQuery;
       this.entity = entity;
       this.recordsPerPage = recordsPerPage;
       this.selectionModel = selectionModel;
       this.filtering = filtering;
       this.status = status;
       this.emptyText = emptyText;
       this.lastUpdatedUser = lastUpdatedUser;
       this.lastUpdatedDate = lastUpdatedDate;
       this.isDeleted = isDeleted;
       this.picfColumnMetadatas = picfColumnMetadatas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

    
    @Column(name="name", unique=true, nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="soure_type", length=25)
    public String getSoureType() {
        return this.soureType;
    }
    
    public void setSoureType(String soureType) {
        this.soureType = soureType;
    }

    
    @Column(name="query", length=1024)
    public String getQuery() {
        return this.query;
    }
    
    public void setQuery(String query) {
        this.query = query;
    }

    
    @Column(name="countQuery", length=512)
    public String getCountQuery() {
        return this.countQuery;
    }
    
    public void setCountQuery(String countQuery) {
        this.countQuery = countQuery;
    }

    
    @Column(name="entity", length=100)
    public String getEntity() {
        return this.entity;
    }
    
    public void setEntity(String entity) {
        this.entity = entity;
    }

    
    @Column(name="records_per_page")
    public Integer getRecordsPerPage() {
        return this.recordsPerPage;
    }
    
    public void setRecordsPerPage(Integer recordsPerPage) {
        this.recordsPerPage = recordsPerPage;
    }

    
    @Column(name="selection_model", length=45)
    public String getSelectionModel() {
        return this.selectionModel;
    }
    
    public void setSelectionModel(String selectionModel) {
        this.selectionModel = selectionModel;
    }

    
    @Column(name="filtering", length=1)
    public Character getFiltering() {
        return this.filtering;
    }
    
    public void setFiltering(Character filtering) {
        this.filtering = filtering;
    }

    
    @Column(name="status", nullable=false, length=15)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="empty_text", length=512)
    public String getEmptyText() {
        return this.emptyText;
    }
    
    public void setEmptyText(String emptyText) {
        this.emptyText = emptyText;
    }

    
    @Column(name="last_updated_user", scale=0)
    public BigDecimal getLastUpdatedUser() {
        return this.lastUpdatedUser;
    }
    
    public void setLastUpdatedUser(BigDecimal lastUpdatedUser) {
        this.lastUpdatedUser = lastUpdatedUser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_updated_date", length=23)
    public Date getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    
    public void setLastUpdatedDate(Date lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
    }

    
    @Column(name="is_deleted")
    public Byte getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Byte isDeleted) {
        this.isDeleted = isDeleted;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="picfDashboard")
    public Set<PicfColumnMetadata> getPicfColumnMetadatas() {
        return this.picfColumnMetadatas;
    }
    
    public void setPicfColumnMetadatas(Set<PicfColumnMetadata> picfColumnMetadatas) {
        this.picfColumnMetadatas = picfColumnMetadatas;
    }




}


