package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PicfTerm generated by hbm2java
 */
@Entity
@Table(name="picf_term"
    ,schema="dbo"
    ,catalog="life_eapp"
)
public class PicfTerm  implements java.io.Serializable {


     private BigDecimal id;
     private String name;
     private String displayName;
     private String description;
     private String type;
     private String mapping;
     private BigDecimal lastUpdatedUser;
     private Date lastUpdatedDate;
     private Byte isDeleted;
     private String datatype;
     private Set<PicfAcrofields> picfAcrofieldses = new HashSet<PicfAcrofields>(0);

    public PicfTerm() {
    }

	
    public PicfTerm(String name, String type, String mapping) {
        this.name = name;
        this.type = type;
        this.mapping = mapping;
    }
    public PicfTerm(String name, String displayName, String description, String type, String mapping, BigDecimal lastUpdatedUser, Date lastUpdatedDate, Byte isDeleted, String datatype, Set<PicfAcrofields> picfAcrofieldses) {
       this.name = name;
       this.displayName = displayName;
       this.description = description;
       this.type = type;
       this.mapping = mapping;
       this.lastUpdatedUser = lastUpdatedUser;
       this.lastUpdatedDate = lastUpdatedDate;
       this.isDeleted = isDeleted;
       this.datatype = datatype;
       this.picfAcrofieldses = picfAcrofieldses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="display_name", length=250)
    public String getDisplayName() {
        return this.displayName;
    }
    
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    
    @Column(name="description", length=200)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="type", nullable=false, length=45)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }

    
    @Column(name="mapping", nullable=false, length=200)
    public String getMapping() {
        return this.mapping;
    }
    
    public void setMapping(String mapping) {
        this.mapping = mapping;
    }

    
    @Column(name="last_updated_user", scale=0)
    public BigDecimal getLastUpdatedUser() {
        return this.lastUpdatedUser;
    }
    
    public void setLastUpdatedUser(BigDecimal lastUpdatedUser) {
        this.lastUpdatedUser = lastUpdatedUser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_updated_date", length=23)
    public Date getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    
    public void setLastUpdatedDate(Date lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
    }

    
    @Column(name="is_deleted")
    public Byte getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Byte isDeleted) {
        this.isDeleted = isDeleted;
    }

    
    @Column(name="datatype", length=250)
    public String getDatatype() {
        return this.datatype;
    }
    
    public void setDatatype(String datatype) {
        this.datatype = datatype;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="picfTerm")
    public Set<PicfAcrofields> getPicfAcrofieldses() {
        return this.picfAcrofieldses;
    }
    
    public void setPicfAcrofieldses(Set<PicfAcrofields> picfAcrofieldses) {
        this.picfAcrofieldses = picfAcrofieldses;
    }




}


