package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.ebix.ifbieapp.util.CustomJacksonDateSerializer;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

/**
 * PicfGroup generated by hbm2java
 */
@Entity
@Table(name = "picf_group")
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(ignoreUnknown = true)
public class PicfGroup implements java.io.Serializable {

	private BigDecimal id;
	private PicfHierarchyType picfHierarchyType;
	private String groupName;
	private String groupDesc;
	private BigDecimal lastUpdatedUser;
	private Date lastUpdatedDate;
	private Byte isDeleted;
	private String groupType;
	private String entityType;
	private Integer lft;
	private Integer rgt;
	private String query;
	private BigDecimal tenantId;
	private Byte rootNode;
	private Integer sortNum;
	private Set<PicfGroupMembers> picfGroupMemberses = new HashSet<PicfGroupMembers>(0);
	private Set<PicfTermSource> picfTermSources = new HashSet<PicfTermSource>(0);
	private Set<PicfNotes> picfNoteses = new HashSet<PicfNotes>(0);

	public PicfGroup() {
	}

	public PicfGroup(String groupName, String groupType) {
		this.groupName = groupName;
		this.groupType = groupType;
	}

	public PicfGroup(PicfHierarchyType picfHierarchyType, String groupName, String groupDesc,
			BigDecimal lastUpdatedUser, Date lastUpdatedDate, Byte isDeleted, String groupType, String entityType,
			Integer lft, Integer rgt, String query, BigDecimal tenantId, Byte rootNode, Integer sortNum,
			Set<PicfGroupMembers> picfGroupMemberses, Set<PicfTermSource> picfTermSources, Set<PicfNotes> picfNoteses) {
		this.picfHierarchyType = picfHierarchyType;
		this.groupName = groupName;
		this.groupDesc = groupDesc;
		this.lastUpdatedUser = lastUpdatedUser;
		this.lastUpdatedDate = lastUpdatedDate;
		this.isDeleted = isDeleted;
		this.groupType = groupType;
		this.entityType = entityType;
		this.lft = lft;
		this.rgt = rgt;
		this.query = query;
		this.tenantId = tenantId;
		this.rootNode = rootNode;
		this.sortNum = sortNum;
		this.picfGroupMemberses = picfGroupMemberses;
		this.picfTermSources = picfTermSources;
		this.picfNoteses = picfNoteses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "hierarchy_type")
	public PicfHierarchyType getPicfHierarchyType() {
		return this.picfHierarchyType;
	}

	public void setPicfHierarchyType(PicfHierarchyType picfHierarchyType) {
		this.picfHierarchyType = picfHierarchyType;
	}

	@Column(name = "group_name", nullable = false)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "group_desc")
	public String getGroupDesc() {
		return this.groupDesc;
	}

	public void setGroupDesc(String groupDesc) {
		this.groupDesc = groupDesc;
	}

	@Column(name = "last_updated_user", scale = 0)
	public BigDecimal getLastUpdatedUser() {
		return this.lastUpdatedUser;
	}

	public void setLastUpdatedUser(BigDecimal lastUpdatedUser) {
		this.lastUpdatedUser = lastUpdatedUser;
	}

	@JsonSerialize(using = CustomJacksonDateSerializer.class)
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_date", length = 23)
	public Date getLastUpdatedDate() {
		return this.lastUpdatedDate;
	}

	public void setLastUpdatedDate(Date lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	@Column(name = "is_deleted")
	public Byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Byte isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "group_type", nullable = false, length = 20)
	public String getGroupType() {
		return this.groupType;
	}

	public void setGroupType(String groupType) {
		this.groupType = groupType;
	}

	@Column(name = "entity_type")
	public String getEntityType() {
		return this.entityType;
	}

	public void setEntityType(String entityType) {
		this.entityType = entityType;
	}

	@Column(name = "lft")
	public Integer getLft() {
		return this.lft;
	}

	public void setLft(Integer lft) {
		this.lft = lft;
	}

	@Column(name = "rgt")
	public Integer getRgt() {
		return this.rgt;
	}

	public void setRgt(Integer rgt) {
		this.rgt = rgt;
	}

	@Column(name = "query", length = 2000)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@Column(name = "tenant_id", scale = 0)
	public BigDecimal getTenantId() {
		return this.tenantId;
	}

	public void setTenantId(BigDecimal tenantId) {
		this.tenantId = tenantId;
	}

	@Column(name = "root_Node")
	public Byte getRootNode() {
		return this.rootNode;
	}

	public void setRootNode(Byte rootNode) {
		this.rootNode = rootNode;
	}

	@Column(name = "sort_Num")
	public Integer getSortNum() {
		return this.sortNum;
	}

	public void setSortNum(Integer sortNum) {
		this.sortNum = sortNum;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picfGroup")
	public Set<PicfGroupMembers> getPicfGroupMemberses() {
		return this.picfGroupMemberses;
	}

	public void setPicfGroupMemberses(Set<PicfGroupMembers> picfGroupMemberses) {
		this.picfGroupMemberses = picfGroupMemberses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picfGroup")
	public Set<PicfTermSource> getPicfTermSources() {
		return this.picfTermSources;
	}

	public void setPicfTermSources(Set<PicfTermSource> picfTermSources) {
		this.picfTermSources = picfTermSources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "picfGroup")
	public Set<PicfNotes> getPicfNoteses() {
		return this.picfNoteses;
	}

	public void setPicfNoteses(Set<PicfNotes> picfNoteses) {
		this.picfNoteses = picfNoteses;
	}

}
