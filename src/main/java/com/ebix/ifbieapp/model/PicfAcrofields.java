package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.ebix.ifbieapp.util.CustomJacksonDateSerializer;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

/**
 * PicfAcrofields generated by hbm2java
 */
@Entity
@Table(name = "picf_acrofields")
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(ignoreUnknown = true)
public class PicfAcrofields implements java.io.Serializable {

	private BigDecimal id;
	private PicfAttribute picfAttribute;
	private PicfFormTemplate picfFormTemplate;
	private PicfTerm picfTerm;
	private String fieldName;
	private String indexedField;
	private Integer indexNo;
	private Integer acroFieldType;
	private Integer indexedFieldOrder;
	private Date lastUpdatedDate;
	private BigDecimal lastUpdatedUser;
	private Byte isDeleted;

	public PicfAcrofields() {
	}

	public PicfAcrofields(String fieldName) {
		this.fieldName = fieldName;
	}

	public PicfAcrofields(PicfAttribute picfAttribute, PicfFormTemplate picfFormTemplate, PicfTerm picfTerm,
			String fieldName, String indexedField, Integer indexNo, Integer acroFieldType, Integer indexedFieldOrder,
			Date lastUpdatedDate, BigDecimal lastUpdatedUser, Byte isDeleted) {
		this.picfAttribute = picfAttribute;
		this.picfFormTemplate = picfFormTemplate;
		this.picfTerm = picfTerm;
		this.fieldName = fieldName;
		this.indexedField = indexedField;
		this.indexNo = indexNo;
		this.acroFieldType = acroFieldType;
		this.indexedFieldOrder = indexedFieldOrder;
		this.lastUpdatedDate = lastUpdatedDate;
		this.lastUpdatedUser = lastUpdatedUser;
		this.isDeleted = isDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "attrId")
	public PicfAttribute getPicfAttribute() {
		return this.picfAttribute;
	}

	public void setPicfAttribute(PicfAttribute picfAttribute) {
		this.picfAttribute = picfAttribute;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "templateId")
	public PicfFormTemplate getPicfFormTemplate() {
		return this.picfFormTemplate;
	}

	public void setPicfFormTemplate(PicfFormTemplate picfFormTemplate) {
		this.picfFormTemplate = picfFormTemplate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "term_id")
	public PicfTerm getPicfTerm() {
		return this.picfTerm;
	}

	public void setPicfTerm(PicfTerm picfTerm) {
		this.picfTerm = picfTerm;
	}

	@Column(name = "fieldName", nullable = false, length = 128)
	public String getFieldName() {
		return this.fieldName;
	}

	public void setFieldName(String fieldName) {
		this.fieldName = fieldName;
	}

	@Column(name = "indexedField", length = 128)
	public String getIndexedField() {
		return this.indexedField;
	}

	public void setIndexedField(String indexedField) {
		this.indexedField = indexedField;
	}

	@Column(name = "indexNo")
	public Integer getIndexNo() {
		return this.indexNo;
	}

	public void setIndexNo(Integer indexNo) {
		this.indexNo = indexNo;
	}

	@Column(name = "acro_field_type")
	public Integer getAcroFieldType() {
		return this.acroFieldType;
	}

	public void setAcroFieldType(Integer acroFieldType) {
		this.acroFieldType = acroFieldType;
	}

	@Column(name = "indexed_field_order")
	public Integer getIndexedFieldOrder() {
		return this.indexedFieldOrder;
	}

	public void setIndexedFieldOrder(Integer indexedFieldOrder) {
		this.indexedFieldOrder = indexedFieldOrder;
	}

	@JsonSerialize(using = CustomJacksonDateSerializer.class)
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_date", length = 23)
	public Date getLastUpdatedDate() {
		return this.lastUpdatedDate;
	}

	public void setLastUpdatedDate(Date lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	@Column(name = "last_updated_user", scale = 0)
	public BigDecimal getLastUpdatedUser() {
		return this.lastUpdatedUser;
	}

	public void setLastUpdatedUser(BigDecimal lastUpdatedUser) {
		this.lastUpdatedUser = lastUpdatedUser;
	}

	@Column(name = "is_deleted")
	public Byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Byte isDeleted) {
		this.isDeleted = isDeleted;
	}

}
