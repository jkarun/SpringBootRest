package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Rider generated by hbm2java
 */
@Entity
@Table(name = "rider")
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Rider implements java.io.Serializable {

	private BigDecimal riderId;
	private AppCase appCase;
	private CaseClientMap caseClientMap;
	private String discriminator;
	private String planCode;
	private Double amount;
	private String levelYear;
	private Double interestRate;
	private Double additionalAmount;
	private Byte isAlreadyBorn;
	private Byte isFree;
	private Set<Benefit> benefits = new HashSet<Benefit>(0);

	public Rider() {
	}

	public Rider(AppCase appCase, CaseClientMap caseClientMap, String discriminator) {
		this.appCase = appCase;
		this.caseClientMap = caseClientMap;
		this.discriminator = discriminator;
	}

	public Rider(AppCase appCase, CaseClientMap caseClientMap, String discriminator, String planCode, Double amount,
			String levelYear, Double interestRate, Double additionalAmount, Byte isAlreadyBorn, Byte isFree,
			Set<Benefit> benefits) {
		this.appCase = appCase;
		this.caseClientMap = caseClientMap;
		this.discriminator = discriminator;
		this.planCode = planCode;
		this.amount = amount;
		this.levelYear = levelYear;
		this.interestRate = interestRate;
		this.additionalAmount = additionalAmount;
		this.isAlreadyBorn = isAlreadyBorn;
		this.isFree = isFree;
		this.benefits = benefits;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "riderId", unique = true, nullable = false, scale = 0)
	public BigDecimal getRiderId() {
		return this.riderId;
	}

	public void setRiderId(BigDecimal riderId) {
		this.riderId = riderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "case_id", nullable = false)
	public AppCase getAppCase() {
		return this.appCase;
	}

	public void setAppCase(AppCase appCase) {
		this.appCase = appCase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "case_client_map_id", nullable = false)
	public CaseClientMap getCaseClientMap() {
		return this.caseClientMap;
	}

	public void setCaseClientMap(CaseClientMap caseClientMap) {
		this.caseClientMap = caseClientMap;
	}

	@Column(name = "DISCRIMINATOR", nullable = false)
	public String getDiscriminator() {
		return this.discriminator;
	}

	public void setDiscriminator(String discriminator) {
		this.discriminator = discriminator;
	}

	@Column(name = "plan_code")
	public String getPlanCode() {
		return this.planCode;
	}

	public void setPlanCode(String planCode) {
		this.planCode = planCode;
	}

	@Column(name = "amount", precision = 53, scale = 0)
	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	@Column(name = "level_year")
	public String getLevelYear() {
		return this.levelYear;
	}

	public void setLevelYear(String levelYear) {
		this.levelYear = levelYear;
	}

	@Column(name = "interest_rate", precision = 53, scale = 0)
	public Double getInterestRate() {
		return this.interestRate;
	}

	public void setInterestRate(Double interestRate) {
		this.interestRate = interestRate;
	}

	@Column(name = "additional_amount", precision = 53, scale = 0)
	public Double getAdditionalAmount() {
		return this.additionalAmount;
	}

	public void setAdditionalAmount(Double additionalAmount) {
		this.additionalAmount = additionalAmount;
	}

	@Column(name = "is_already_born")
	public Byte getIsAlreadyBorn() {
		return this.isAlreadyBorn;
	}

	public void setIsAlreadyBorn(Byte isAlreadyBorn) {
		this.isAlreadyBorn = isAlreadyBorn;
	}

	@Column(name = "is_free")
	public Byte getIsFree() {
		return this.isFree;
	}

	public void setIsFree(Byte isFree) {
		this.isFree = isFree;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rider")
	public Set<Benefit> getBenefits() {
		return this.benefits;
	}

	public void setBenefits(Set<Benefit> benefits) {
		this.benefits = benefits;
	}

}
