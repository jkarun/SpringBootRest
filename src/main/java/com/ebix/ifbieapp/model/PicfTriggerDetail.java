package com.ebix.ifbieapp.model;
// Generated Mar 23, 2018 11:11:12 AM by Hibernate Tools 4.3.2-SNAPSHOT


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PicfTriggerDetail generated by hbm2java
 */
@Entity
@Table(name="picf_trigger_detail"
    ,schema="dbo"
    ,catalog="life_eapp"
    , uniqueConstraints = @UniqueConstraint(columnNames="job_detail") 
)
public class PicfTriggerDetail  implements java.io.Serializable {


     private BigDecimal id;
     private PicfJobDetail picfJobDetail;
     private String name;
     private String description;
     private String groupName;
     private String type;
     private Date startTime;
     private Date endTime;
     private BigDecimal repeatInterval;
     private Integer repeatCount;
     private Integer hour;
     private Integer minute;
     private String daysOfWeek;
     private String cronExpression;
     private BigDecimal lastUpdatedUser;
     private Date lastUpdatedDate;
     private Byte isDeleted;

    public PicfTriggerDetail() {
    }

	
    public PicfTriggerDetail(PicfJobDetail picfJobDetail, String name, String groupName, String type, String daysOfWeek, String cronExpression) {
        this.picfJobDetail = picfJobDetail;
        this.name = name;
        this.groupName = groupName;
        this.type = type;
        this.daysOfWeek = daysOfWeek;
        this.cronExpression = cronExpression;
    }
    public PicfTriggerDetail(PicfJobDetail picfJobDetail, String name, String description, String groupName, String type, Date startTime, Date endTime, BigDecimal repeatInterval, Integer repeatCount, Integer hour, Integer minute, String daysOfWeek, String cronExpression, BigDecimal lastUpdatedUser, Date lastUpdatedDate, Byte isDeleted) {
       this.picfJobDetail = picfJobDetail;
       this.name = name;
       this.description = description;
       this.groupName = groupName;
       this.type = type;
       this.startTime = startTime;
       this.endTime = endTime;
       this.repeatInterval = repeatInterval;
       this.repeatCount = repeatCount;
       this.hour = hour;
       this.minute = minute;
       this.daysOfWeek = daysOfWeek;
       this.cronExpression = cronExpression;
       this.lastUpdatedUser = lastUpdatedUser;
       this.lastUpdatedDate = lastUpdatedDate;
       this.isDeleted = isDeleted;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="job_detail", unique=true, nullable=false)
    public PicfJobDetail getPicfJobDetail() {
        return this.picfJobDetail;
    }
    
    public void setPicfJobDetail(PicfJobDetail picfJobDetail) {
        this.picfJobDetail = picfJobDetail;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=45)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="group_name", nullable=false, length=45)
    public String getGroupName() {
        return this.groupName;
    }
    
    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    
    @Column(name="type", nullable=false, length=15)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_time", length=23)
    public Date getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="end_time", length=23)
    public Date getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    
    @Column(name="repeat_interval", scale=0)
    public BigDecimal getRepeatInterval() {
        return this.repeatInterval;
    }
    
    public void setRepeatInterval(BigDecimal repeatInterval) {
        this.repeatInterval = repeatInterval;
    }

    
    @Column(name="repeat_count")
    public Integer getRepeatCount() {
        return this.repeatCount;
    }
    
    public void setRepeatCount(Integer repeatCount) {
        this.repeatCount = repeatCount;
    }

    
    @Column(name="hour")
    public Integer getHour() {
        return this.hour;
    }
    
    public void setHour(Integer hour) {
        this.hour = hour;
    }

    
    @Column(name="minute")
    public Integer getMinute() {
        return this.minute;
    }
    
    public void setMinute(Integer minute) {
        this.minute = minute;
    }

    
    @Column(name="days_of_week", nullable=false, length=45)
    public String getDaysOfWeek() {
        return this.daysOfWeek;
    }
    
    public void setDaysOfWeek(String daysOfWeek) {
        this.daysOfWeek = daysOfWeek;
    }

    
    @Column(name="cron_expression", nullable=false, length=45)
    public String getCronExpression() {
        return this.cronExpression;
    }
    
    public void setCronExpression(String cronExpression) {
        this.cronExpression = cronExpression;
    }

    
    @Column(name="last_updated_user", scale=0)
    public BigDecimal getLastUpdatedUser() {
        return this.lastUpdatedUser;
    }
    
    public void setLastUpdatedUser(BigDecimal lastUpdatedUser) {
        this.lastUpdatedUser = lastUpdatedUser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_updated_date", length=23)
    public Date getLastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    
    public void setLastUpdatedDate(Date lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
    }

    
    @Column(name="is_deleted")
    public Byte getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Byte isDeleted) {
        this.isDeleted = isDeleted;
    }




}


